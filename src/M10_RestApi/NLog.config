<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal-M10_RestApi.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
	<!--  <variable name="myvar" value="myvalue"/>-->

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->

  <!-- enable asp.net core layout renderers -->
  <extensions>
  	<add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
	  <!--<target xsi:type="ColoredConsole" name="c" layout="${longdate} ${uppercase:${level}} Trace: ${stacktrace} ${message} " />-->
	  
	  <!--<target xsi:type="Console" name="c" 
			  layout="${longdate} ${uppercase:${level}} ${message:withException=false}" />
	  
	  <target xsi:type="File" name="f" 
			  layout="${newline}${longdate} ${uppercase:${level}} ${stacktrace} ${message:withException=true} "
			  fileName="${basedir}/logs/AppLog.${shortdate}.log" />-->


	  <!-- File Target for all log messages with basic details -->
	  <!-- <target xsi:type="File" name="allFile" fileName="${basedir}/logs/nlog-AspNetCore-${shortdate}-all.log" -->
			<!--   layout="${newline}|${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger} -->
			<!--   |${message} ${exception:format=tostring}" /> -->

	  <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
	  <!-- <target xsi:type="File" name="ownFile-web" fileName="${basedir}/logs/nlog-AspNetCore-${shortdate}-own.log" -->
			<!--   layout="${newline}|${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger} -->
			<!--   |${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" /> -->

	  <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
	  <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	  
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
	  <!--<logger name="*" minlevel="Trace" writeTo="c" />
	  <logger name="*" minlevel="Error" writeTo="f" />-->
	  

	  <!--All logs, including from Microsoft-->
	  <!-- <logger name="*" minlevel="Trace" writeTo="allFile" /> -->
	  <!--Own log messages with extra web details-->
	  <!-- <logger name="*" minlevel="Error" writeTo="ownFile-web" /> -->
	  <!--To Console-->
	  <!-- <logger name="*" minlevel="Info" writeTo="lifetimeConsole" /> -->

	  <!--Output hosting lifetime messages to console target for faster startup detection -->
	  <!--<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />-->

	  <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
	  <!--<logger name="Microsoft.*" maxlevel="Info" final="true" />-->
	  <!--<logger name="System.Net.Http.*" maxlevel="Info" final="true" />-->

  </rules>
</nlog>
